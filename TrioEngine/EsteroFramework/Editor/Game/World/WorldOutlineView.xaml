<UserControl x:Class="EsteroFramework.Editor.Game.WorldOutlineView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EsteroFramework.Editor.Game"
             xmlns:ec="clr-namespace:EsteroControls;assembly=EsteroControls"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             d:DataContext="{x:Static local:WorldOutlineViewModel.DesignInstance}"
             mc:Ignorable="d" 
             
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <ec:TreeViewEx BorderThickness="0"
                       ItemsSource="{Binding Outline.RootItems}"
                       SelectedItems="{Binding Outline.SelectedItems, Mode=OneWay}">
            <ec:TreeViewEx.Resources>
                <HierarchicalDataTemplate DataType="{x:Type local:WorldOutlineItem}" ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">

                        <TextBlock Text="{Binding Text}" />
                    </StackPanel>
                </HierarchicalDataTemplate>
                
                <PathGeometry x:Key="TreeArrow">
                    <PathGeometry.Figures>
                        <PathFigureCollection>
                            <PathFigure IsClosed="True"
                            IsFilled="True"
                            StartPoint="0 0">
                                <PathFigure.Segments>
                                    <PathSegmentCollection>
                                        <LineSegment Point="0 6" />
                                        <LineSegment Point="6 0" />
                                    </PathSegmentCollection>
                                </PathFigure.Segments>
                            </PathFigure>
                        </PathFigureCollection>
                    </PathGeometry.Figures>
                </PathGeometry>
                <SolidColorBrush x:Key="ListBorder" Color="#828790" />
                
                <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Width" Value="16" />
                    <Setter Property="Height" Value="16" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border Width="16"
                            Height="16"
                            Background="Transparent"
                            Padding="5,5,5,5">
                                    <Path x:Name="ExpandPath"
                              Data="{StaticResource TreeArrow}"
                              Fill="Transparent"
                              Stroke="#FF989898">
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                        </Path.RenderTransform>
                                    </Path>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF1BBBFA" />
                                        <Setter TargetName="ExpandPath" Property="Fill" Value="Transparent" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="ExpandPath" Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter TargetName="ExpandPath" Property="Fill" Value="#FF595959" />
                                        <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF262626" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="TreeViewEx.ToggleButton" TargetType="{x:Type ToggleButton}">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Foreground" Value="{DynamicResource Control.Static.Foreground}" />
                    <Setter Property="Width" Value="16" />
                    <Setter Property="Height" Value="16" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Grid Background="Transparent">
                                    <TextBlock x:Name="ExpandArrow"
                                   FontSize="16">
                            &#xE007;
                                    </TextBlock>
                                    <TextBlock x:Name="CollapseArrow"
                                  FontSize="16"
                                   Visibility="Collapsed">
                            &#xE008;
                                    </TextBlock>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="ExpandArrow" Property="Visibility" Value="Collapsed" />
                                        <Setter TargetName="CollapseArrow" Property="Visibility" Value="Visible" />
                                        <Setter Property="Foreground" Value="{DynamicResource Control.Static.Foreground}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource Control.Pressed.Border}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="IsChecked" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground" Value="{DynamicResource Control.Pressed.Border}" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type ec:TreeViewEx}">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Setter Property="Padding" Value="1" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ec:TreeViewEx}">
                                <Border Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                                    <ScrollViewer Name="PART_ScrollViewer"
                                      Background="{TemplateBinding Background}"
                                      CanContentScroll="False"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style  x:Key="{x:Type ec:TreeViewItemEx}" TargetType="{x:Type ec:TreeViewItemEx}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ec:TreeViewItemEx}">
                                <StackPanel>
                                    <Border Name="PART_Header"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="True">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="19" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.Margin>
                                                <Binding Converter="{x:Static ec:IndentationMarginConverter.Instance}"
                                             Path="IndentationLevel"
                                             RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.ConverterParameter>
                                                        <sys:Double>19</sys:Double>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Grid.Margin>
                                            <ToggleButton x:Name="Expander"
                                              ClickMode="Press"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource ExpandCollapseToggleStyle}" />
                                            <ContentPresenter Grid.Row="0"
                                                  Grid.Column="1"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" />
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="False">
                                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="False">
                                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="PART_Header" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter TargetName="PART_Header" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True" />
                                            <Condition Property="ec:TreeViewEx.IsSelectionActive" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        <Setter TargetName="PART_Header" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="False" />
                                            <Condition Property="IsKeyboardFocused" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />

                </Style>
            </ec:TreeViewEx.Resources>
        </ec:TreeViewEx>
    </Grid>
</UserControl>

<!--d:DataContext="{d:DesignInstance local:WorldOutlineViewModel, IsDesignTimeCreatable=False}"-->