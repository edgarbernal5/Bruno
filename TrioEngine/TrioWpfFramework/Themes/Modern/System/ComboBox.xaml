<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="FocusVisual.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Geometry x:Key="Modern.ComboBox.Arrow" options:Freeze="True">M 0,2.5 L0,0.5 0,0.5 3.5,4 3.5,4 7,0.5 7,2.5 3.5,6 z</Geometry>

    <!--  ComboBox FocusVisual  -->
    <!--<Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource Control.Static.Foreground}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="Modern.ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Margin="0"
                                  Focusable="False"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Modern.ComboBoxEditableToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Border x:Name="SplitBorder"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Margin="0,-1,-1,-1"
                                HorizontalAlignment="Right"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                            <Path x:Name="Arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="{StaticResource Modern.ComboBox.Arrow}"
                                  Fill="{DynamicResource Control.Static.Glyph}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Control.MouseOver.Glyph}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TextBox.MouseOver.Border}" />
                            <Setter TargetName="SplitBorder" Property="Background" Value="{DynamicResource Control.MouseOver.Background}" />
                            <Setter TargetName="SplitBorder" Property="BorderBrush" Value="{DynamicResource TextBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Control.Pressed.Glyph}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TextBox.Active.Border}" />
                            <Setter TargetName="SplitBorder" Property="Background" Value="{DynamicResource Control.Pressed.Background}" />
                            <Setter TargetName="SplitBorder" Property="BorderBrush" Value="{DynamicResource TextBox.Active.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Control.Pressed.Glyph}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TextBox.Active.Border}" />
                            <Setter TargetName="SplitBorder" Property="Background" Value="{DynamicResource Control.Pressed.Background}" />
                            <Setter TargetName="SplitBorder" Property="BorderBrush" Value="{DynamicResource TextBox.Active.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Control.Disabled.Glyph}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox ToggleButton  -->
    <Style x:Key="Modern.ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Border x:Name="SplitBorder"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Margin="0,-1,-1,-1"
                                HorizontalAlignment="Right"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                            <Path x:Name="Arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="{StaticResource Modern.ComboBox.Arrow}"
                                  Fill="{DynamicResource Control.Static.Glyph}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Control.MouseOver.Glyph}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Control.MouseOver.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Control.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Control.Pressed.Glyph}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Control.Pressed.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Control.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Control.Pressed.Glyph}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Control.Pressed.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Control.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Control.Disabled.Glyph}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Control.Disabled.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Control.Disabled.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox Template (editable)  -->
    <ControlTemplate x:Key="Modern.ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="Root" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   AllowsTransparency="True"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <themes:SystemDropShadowChrome x:Name="Shadow"
                                               MinWidth="{Binding ActualWidth, ElementName=Root}"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               Color="Transparent">
                    <Border x:Name="DropDownBorder"
                            Background="{DynamicResource TextBox.Static.Background}"
                            BorderBrush="{DynamicResource Menu.Static.Border}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid>
                                <Canvas Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                    <Rectangle x:Name="OpaqueRect"
                                               Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                               Fill="{Binding Background, ElementName=DropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="ToggleButton"
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource Modern.ComboBoxEditableToggleButton}" />
            <Border x:Name="Border"
                    Grid.Column="0"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <TextBox x:Name="PART_EditableTextBox"
                     Grid.Column="0"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                     Background="{TemplateBinding Background}"
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                     Padding="{TemplateBinding Padding}"
                     Style="{StaticResource Modern.ComboBoxEditableTextBox}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Control.Disabled.Foreground}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextBox.Static.Foreground}" />
                <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{DynamicResource Control.Focus.Border}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{DynamicResource TextBox.MouseOver.Border}" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                <Setter TargetName="Shadow" Property="Color" Value="#71000000" />
                <Setter TargetName="Shadow" Property="Margin" Value="0,0,5,5" />
            </Trigger>
            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="True" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ComboBox Template  -->
    <ControlTemplate x:Key="Modern.ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="Root" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   Margin="1"
                   AllowsTransparency="True"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <themes:SystemDropShadowChrome x:Name="Shadow"
                                               MinWidth="{Binding ActualWidth, ElementName=Root}"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               Color="Transparent">
                    <Border x:Name="DropDownBorder"
                            Background="{DynamicResource TextBox.Static.Background}"
                            BorderBrush="{DynamicResource Menu.Static.Border}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid>
                                <Canvas Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                    <Rectangle x:Name="OpaqueRect"
                                               Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                               Fill="{Binding Background, ElementName=DropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="ToggleButton"
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource Modern.ComboBoxToggleButton}" />
            <ContentPresenter x:Name="ContentPresenter"
                              Grid.Column="0"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              IsHitTestVisible="False"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                <Setter TargetName="Shadow" Property="Color" Value="#71000000" />
                <Setter TargetName="Shadow" Property="Margin" Value="0,0,5,5" />
            </Trigger>
            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="True" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <Trigger SourceName="ToggleButton" Property="IsChecked" Value="True">
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Control.Pressed.Foreground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Control.Disabled.Foreground}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ComboBox  -->
    <Style x:Key="Modern.ComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource Control.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Control.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource Modern.Control.FocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBox.Static.Foreground}" />
        <Setter Property="Padding" Value="6,2,5,2" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource Modern.ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.Border}" />
                <Setter Property="IsTabStop" Value="True" />
                <Setter Property="Padding" Value="2,2" />
                <Setter Property="Template" Value="{StaticResource Modern.ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ComboBoxItem  -->
    <Style x:Key="Modern.ComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource Modern.Control.FocusVisual}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="TextElement.Foreground" Value="{DynamicResource Control.Disabled.Foreground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="UIElement.IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Item.MouseOver.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Item.MouseOver.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Item.SelectedActive.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Item.SelectedActive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Item.SelectedActive.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Item.SelectedActive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="UIElement.IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Item.SelectedActive.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Item.SelectedActive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Item.MouseOver.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Item.MouseOver.Border}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
