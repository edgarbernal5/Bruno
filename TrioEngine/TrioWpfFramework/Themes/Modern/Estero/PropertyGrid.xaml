<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:TrioWpfFramework.Windows.Themes"
                    xmlns:ee="clr-namespace:TrioWpfFramework.Controls"
                    xmlns:windows="clr-namespace:TrioWpfFramework.Windows">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Common.xaml" />
        <ResourceDictionary Source="../System/FocusVisual.xaml" />
        <ResourceDictionary Source="../System/ToolBarButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ee:PropertyGridTemplateSelector x:Key="PropertyGridTemplateSelector" />

    <Style x:Key="Modern.EmbeddedButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Control.MouseOver.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Control.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Control.Pressed.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Control.Pressed.Border}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Control.Pressed.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Control.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Modern.PropertyGrid.RadioButton"
           BasedOn="{StaticResource Modern.ToolBar.ButtonBase}"
           TargetType="{x:Type RadioButton}" />

    <Style x:Key="Modern.PropertyGrid.ListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource Control.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Static.Foreground}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Contained" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Contained" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TextBox.Static.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Control.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Modern.PropertyGrid.ListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Static.Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="windows:WpfWindowsExtensions.SelectOnMouseDown" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid SnapsToDevicePixels="True">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Item.SelectedActive.Background}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Item.SelectedActive.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource Item.SelectedInactive.Background}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Control.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="Modern.PropertyGrid.Expander.ToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid Background="Transparent">
            <TextBlock x:Name="ExpandArrow"
                       FontFamily="pack://application:,,,/DigitalRune.Windows.Themes;component/Resources/#DigitalRune Icons"
                       FontSize="16">
                &#xE007;
            </TextBlock>
            <TextBlock x:Name="CollapseArrow"
                       FontFamily="pack://application:,,,/DigitalRune.Windows.Themes;component/Resources/#DigitalRune Icons"
                       FontSize="16"
                       Visibility="Collapsed">
                &#xE008;
            </TextBlock>
            <ContentPresenter Margin="16 0 0 0" TextElement.FontWeight="Bold" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="ExpandArrow" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="CollapseArrow" Property="Visibility" Value="Visible" />
                <Setter Property="Foreground" Value="{DynamicResource Control.Static.Foreground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Control.Pressed.Border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Control.Pressed.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Modern.PropertyGrid.Expander" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource PropertyGroup.Background}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource Modern.FocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Static.Foreground}" />
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="Padding" Value="10,2,5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ContentRow" Height="*" />
                            </Grid.RowDefinitions>
                            <ToggleButton Grid.Row="0"
                                          Height="18"
                                          Content="{TemplateBinding Header}"
                                          Focusable="False"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsTabStop="False"
                                          OverridesDefaultStyle="True"
                                          Template="{StaticResource Modern.PropertyGrid.Expander.ToggleButton}" />
                            <Border x:Name="ExpandSite"
                                    Grid.Row="1"
                                    Margin="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    BorderThickness="0"
                                    Padding="0"
                                    Visibility="Collapsed">
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="False" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  PropertyGrid  -->
    <Style x:Key="Modern.PropertyGrid" TargetType="{x:Type ee:PropertyGrid}">
        <Setter Property="Background" Value="{DynamicResource Window.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Control.Static.Border}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="ee:PropertyGridCommands.ResetProperty"
                              CommandParameter="{Binding}"
                              Header="Reset" />
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource Control.Static.Foreground}" />
        <Setter Property="NameColumnWidth" Value="100" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ee:PropertyGrid}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <!--  Header with Type and Name  -->
                            <StackPanel Margin="3,0,0,7" Orientation="Horizontal">
                                <TextBlock FontWeight="Bold" Text="{Binding PropertySource.TypeName, RelativeSource={RelativeSource TemplatedParent}}" />
                                <TextBlock Margin="5,0,0,0" Text="{Binding PropertySource.Name, RelativeSource={RelativeSource TemplatedParent}}" />
                            </StackPanel>

                            <!--  Categorized Buttons and Filter Text Box  -->
                            <Grid Grid.Row="1" Margin="1,0,0,7">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid Margin="0,0,7,0">
                                    <StackPanel Orientation="Horizontal">
                                        <RadioButton IsChecked="{Binding IsCategorized, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Style="{StaticResource Modern.PropertyGrid.RadioButton}"
                                                     ToolTip="Categorized">
                                            <ee:Icon Width="16"
                                                     Height="16"
                                                     Source="{x:Static themes:MultiColorGlyphs.Categorize}" />
                                        </RadioButton>
                                        <RadioButton IsChecked="{Binding IsCategorized, Converter={StaticResource InvertBooleanConverter}, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Style="{StaticResource Modern.PropertyGrid.RadioButton}"
                                                     ToolTip="Alphabetical">
                                            <ee:Icon Width="16"
                                                     Height="16"
                                                     Source="{x:Static themes:MultiColorGlyphs.SortAscending}" />
                                        </RadioButton>
                                    </StackPanel>
                                </Grid>

                                <ee:CommandTextBox x:Name="SearchBox"
                                                   Grid.Column="1"
                                                   ClearOnEscape="True"
                                                   Command="ee:PropertyGridCommands.ClearFilter"
                                                   SelectAllOnFocus="True"
                                                   Text="{Binding Filter, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                                   Watermark="Search">
                                    <ee:CommandTextBox.ButtonContent>
                                        <Path x:Name="ClearIcon"
                                              Width="10"
                                              Height="10"
                                              Margin="3"
                                              Data="{StaticResource Modern.Cross}"
                                              Stretch="Fill"
                                              Stroke="{Binding Foreground, ElementName=SearchBox}"
                                              StrokeThickness="2" />
                                    </ee:CommandTextBox.ButtonContent>
                                </ee:CommandTextBox>
                            </Grid>

                            <!--  Properties List  -->
                            <DockPanel Grid.Row="2"
                                       ClipToBounds="True"
                                       LastChildFill="True">
                                <Grid DockPanel.Dock="Top">
                                    <ProgressBar x:Name="ProgressBar"
                                                 Height="2"
                                                 Visibility="Collapsed" />
                                    <ListBox x:Name="PART_ListBox"
                                             BorderThickness="0,0,0,0"
                                             ItemContainerStyle="{StaticResource Modern.PropertyGrid.ListBoxItem}"
                                             ItemsSource="{Binding Properties, RelativeSource={RelativeSource TemplatedParent}}"
                                             SelectedItem="{Binding SelectedProperty, RelativeSource={RelativeSource TemplatedParent}}"
                                             Style="{StaticResource Modern.PropertyGrid.ListBox}">

                                        <!--  Item Template with Name column and Value column  -->
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="0,0,0,0"
                                                      HorizontalAlignment="Stretch"
                                                      VerticalAlignment="Center"
                                                      ToolTip="{Binding Description, Mode=OneTime}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding NameColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ee:PropertyGrid}}}" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>

                                                    <TextBlock Grid.Column="0"
                                                               Margin="7,2,5,2"
                                                               Focusable="False"
                                                               Text="{Binding Name}"
                                                               TextTrimming="CharacterEllipsis" />

                                                    <ContentControl Grid.Column="1"
                                                                    HorizontalAlignment="Stretch"
                                                                    VerticalAlignment="Center"
                                                                    HorizontalContentAlignment="Stretch"
                                                                    Content="{Binding}"
                                                                    ContentTemplateSelector="{StaticResource PropertyGridTemplateSelector}"
                                                                    Focusable="False"
                                                                    IsTabStop="False" />
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>

                                        <!--  Group Style with Expander  -->
                                        <ItemsControl.GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.ContainerStyle>
                                                    <Style TargetType="{x:Type GroupItem}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate>
                                                                    <Border Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}">
                                                                        <Expander Header="{Binding Name}"
                                                                                  IsExpanded="True"
                                                                                  Style="{StaticResource Modern.PropertyGrid.Expander}">
                                                                            <ItemsPresenter />
                                                                        </Expander>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </GroupStyle.ContainerStyle>
                                            </GroupStyle>
                                        </ItemsControl.GroupStyle>
                                    </ListBox>

                                    <!--  A thumb over the list box controls the width of the name column  -->
                                    <Thumb x:Name="PART_Thumb"
                                           Width="5"
                                           Margin="0 0 0 0"
                                           HorizontalAlignment="Left"
                                           Cursor="SizeWE">
                                        <Thumb.RenderTransform>
                                            <TransformGroup>
                                                <TranslateTransform X="{Binding NameColumnWidth, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </TransformGroup>
                                        </Thumb.RenderTransform>
                                        <Thumb.Template>
                                            <ControlTemplate>
                                                <Border Background="Transparent" />
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Grid>
                                <Border Background="{DynamicResource PropertyGroup.Background}" />
                            </DockPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsCategorized" Value="False">
                            <Setter TargetName="PART_ListBox" Property="Background" Value="{DynamicResource PropertyGroup.Background}" />
                        </Trigger>
                        <Trigger SourceName="ClearIcon" Property="IsEnabled" Value="False">
                            <Setter TargetName="ClearIcon" Property="Stroke" Value="{DynamicResource Control.Disabled.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsLoading" Value="True">
                            <Setter TargetName="ProgressBar" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ProgressBar" Property="IsIndeterminate" Value="True" />
                            <Setter TargetName="PART_ListBox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_ListBox" Property="ItemsSource" Value="{x:Null}" />
                            <Setter TargetName="PART_Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Modern.PropertyGrid.ColorButton" TargetType="{x:Type ee:ColorButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ee:ColorButton}">
                    <Button Name="PART_Button"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Padding="5,3,5,3"
                            Style="{StaticResource Modern.EmbeddedButton}">
                        <Border HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{DynamicResource Modern.CheckerBrush}"
                                SnapsToDevicePixels="True">
                            <Border>
                                <Border.Background>
                                    <SolidColorBrush Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Color}" />
                                </Border.Background>
                            </Border>
                        </Border>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="{ComponentResourceKey {x:Type ee:PropertyGrid}, {x:Type Color}}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBox Grid.ColumnSpan="2"
                     Padding="30,1,3,1"
                     Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
            <ee:ColorButton Grid.Column="0"
                            Width="30"
                            Style="{StaticResource Modern.PropertyGrid.ColorButton}"
                            Color="{Binding Path=Value, Mode=TwoWay}" />
        </Grid>
    </DataTemplate>

</ResourceDictionary>
