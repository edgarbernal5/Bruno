struct TextureSampler2D {
    Texture2D    t;
    SamplerState s;
};
struct TextureSampler2DShadow {
    Texture2D                t;
    SamplerComparisonState   s;
};
struct TextureSampler3D {
    Texture3D    t;
    SamplerState s;
};
struct TextureSamplerCube {
    TextureCube  t;
    SamplerState s;
};
TextureSampler2D CreateTextureSampler2D(Texture2D t, SamplerState s) {
    TextureSampler2D ts;
    ts.t = t; ts.s = s;
    return ts;
}
TextureSampler2DShadow CreateTextureSampler2DShadow(Texture2D t, SamplerComparisonState s) {
    TextureSampler2DShadow ts;
    ts.t = t; ts.s = s;
    return ts;
}
TextureSampler3D CreateTextureSampler3D(Texture3D t, SamplerState s) {
    TextureSampler3D ts;
    ts.t = t; ts.s = s;
    return ts;
}
TextureSamplerCube CreateTextureSamplerCube(TextureCube t, SamplerState s) {
    TextureSamplerCube ts;
    ts.t = t; ts.s = s;
    return ts;
}
Texture2D gDiffuseMap : register(t0);
SamplerState linear_sampler : register(s0);
float3 sunColor;
float3 moonColor;
float3 eddColor;
float4 seddColor;
float floatante;
cbuffer cbShadow {
    float4 AmbientColor;
    float4 LightColor;
    float3 LightPosition;
    float LightRadius;
    float3 CameraPosition;
    float2 ShadowMapSize;
};
cbuffer cbLights {
    float3 myLightDirection;
    float3 myLightColour;
    float3 myCameraPosition;
    float2 myHalfPixel;
    float4x4 myInverseViewProjection;
    float myPadding;
};
cbuffer cbPerObject {
    float4x4 gWorldViewProj;
    float4x4 gWorldView;
};
struct VertexIn {
    float3 PosL : SV_POSITION;
    float4 Color : COLOR;
    float2 Tex : TEXCOORD0;
};
struct VertexOut {
    float4 PosH : SV_POSITION;
    float4 Color : COLOR;
    float2 Tex : TEXCOORD0;
};
VertexOut VS(VertexIn vin) {
    VertexOut vout;
    ((vout).PosH = mul(float4((vin).PosL, 1.000000), gWorldViewProj));
    ((vout).Color = (vin).Color);
    ((vout).Tex = (vin).Tex);
    return vout;
};
float4 PS(VertexOut pin) : SV_Target {
    float4 color = (pin).Color;
    float4 texColor = gDiffuseMap.Sample(linear_sampler, (pin).Tex);
    return texColor;
};
