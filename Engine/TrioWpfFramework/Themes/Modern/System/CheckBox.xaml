<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="FocusVisual.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Modern.CheckBox.FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource Control.Static.Foreground}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  CheckBox  -->
    <Style x:Key="Modern.CheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource Modern.Control.FocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Static.Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border"
                                Margin="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Path x:Name="OptionMark"
                                      Margin="1"
                                      Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                      Fill="{DynamicResource Control.Static.Foreground}"
                                      Stretch="None"
                                      Visibility="Hidden" />
                                <Rectangle x:Name="IndeterminateMark"
                                           Margin="2"
                                           Fill="{DynamicResource Control.Static.Foreground}"
                                           Visibility="Hidden" />
                            </Grid>
                        </Border>
                        <ContentPresenter Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource Modern.CheckBox.FocusVisual}" />
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Control.MouseOver.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Control.MouseOver.Border}" />
                            <Setter TargetName="IndeterminateMark" Property="Fill" Value="{DynamicResource Control.Static.Foreground}" />
                            <Setter TargetName="OptionMark" Property="Fill" Value="{DynamicResource Control.Static.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Control.Static.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Control.Disabled.Border}" />
                            <Setter TargetName="IndeterminateMark" Property="Fill" Value="{DynamicResource Control.Disabled.Foreground}" />
                            <Setter TargetName="OptionMark" Property="Fill" Value="{DynamicResource Control.Disabled.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Control.Pressed.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Control.Pressed.Border}" />
                            <Setter TargetName="IndeterminateMark" Property="Fill" Value="{DynamicResource Control.Pressed.Foreground}" />
                            <Setter TargetName="OptionMark" Property="Fill" Value="{DynamicResource Control.Pressed.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="IndeterminateMark" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="OptionMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="IndeterminateMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OptionMark" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
