<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:TrioWpfFramework.Controls"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!--  TreeViewEx  -->
    <Style x:Key="Modern.TreeViewEx" TargetType="{x:Type controls:TreeViewEx}">
        <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource TextBox.Static.Foreground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TreeViewEx}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="1"
                            SnapsToDevicePixels="True">
                        <ScrollViewer Name="ScrollViewer"
                                      CanContentScroll="False"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TextBox.Static.Background}" />
                        </Trigger>
                        <!--<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                            <Setter TargetName="ScrollViewer" Property="CanContentScroll" Value="True" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!--  TreeViewItemEx ToggleButton  -->
    <Style x:Key="Modern.TreeViewEx.ToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource Control.Static.Foreground}" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent">
                        <TextBlock x:Name="ExpandArrow"
                                   FontFamily="pack://application:,,,/TrioWpfFramework;component/Windows/Themes/Resources/#DigitalRune Icons"
                                   FontSize="16">
                            &#xE007;
                        </TextBlock>
                        <TextBlock x:Name="CollapseArrow"
                                   FontFamily="pack://application:,,,/TrioWpfFramework;component/Windows/Themes/Resources/#DigitalRune Icons"
                                   FontSize="16"
                                   Visibility="Collapsed">
                            &#xE008;
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandArrow" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CollapseArrow" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="{DynamicResource Control.Static.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Control.Pressed.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource Control.Pressed.Border}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TreeViewItemEx  -->
    <Style x:Key="Modern.TreeViewItemEx" TargetType="{x:Type controls:TreeViewItemEx}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBox.Static.Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TreeViewItemEx}">
                    <StackPanel>
                        <Border Name="PART_Header"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.Margin>
                                    <Binding Converter="{x:Static controls:IndentationMarginConverter.Instance}"
                                             Path="IndentationLevel"
                                             RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <sys:Double>19</sys:Double>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Grid.Margin>
                                <ToggleButton x:Name="Expander"
                                              ClickMode="Press"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource Modern.TreeViewEx.ToggleButton}" />
                                <ContentPresenter Grid.Row="0"
                                                  Grid.Column="1"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Header" Property="Background" Value="{DynamicResource Item.MouseOver.Background}" />
                            <Setter TargetName="PART_Header" Property="BorderBrush" Value="{DynamicResource Item.MouseOver.Border}" />
                        </Trigger>-->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Header" Property="Background" Value="{DynamicResource Item.SelectedActive.Background}" />
                            <Setter TargetName="PART_Header" Property="BorderBrush" Value="{DynamicResource Item.SelectedActive.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="controls:TreeViewEx.IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="Background" Value="{DynamicResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="PART_Header" Property="BorderBrush" Value="{DynamicResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="BorderBrush" Value="{DynamicResource Item.SelectedActive.Border}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Control.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>-->
    </Style>

</ResourceDictionary>
